plot_to_address = {
# format is:
# R1Plot:R1Address,
# Or for a given R1Plot score, their R1Address is/should be on the right
# This list is neither complete nor updated, but everyone not on this
# list should have an R1Address score.
      1:398,
      2:516,
      3:265,
      4:30,
      5:771,
      6:28,
      7:32,
      8:257,
      9:27,
     10:34,
     11:259,
     13:25,
     14:397,
     15:35,
     16:38,
     17:36,
     18:42,
     19:45,
     20:394,
     21:26,
     22:396,
     23:395,
     24:15,
     25:161,
     26:10,
     27:16,
     28:160,
     29:162,
     30:18,
     31:289,
     32:39,
     33:1287,
     34:393,
     35:263,
     37:157,
     38:1155,
     39:158,
     40:391,
     41:1157,
     42:297,
     43:46,
     45:4610,
     46:20,
     47:11,
     48:1031,
     49:1032,
     50:287,
     51:163,
     52:9,
     53:21,
     54:19,
     55:164,
     56:24,
     57:389,
     58:1156,
     59:7,
     60:269,
     61:40,
     62:23,
     63:43,
     64:156,
     65:267,
     66:153,
     67:17,
     68:1283,
     69:390,
     70:152,
     71:47,
     72:1160,
     73:517,
     75:1159,
     76:293,
     77:295,
     78:1165,
     79:165,
     80:291,
     81:155,
     82:154,
     83:299,
     84:1166,
     85:902,
     86:1154,
     87:166,
     88:133,
     89:6,
     90:8,
     97:770,
     92:388,
     94:1163,
     95:904,
     96:385,
     97:1033,
     98:177,
     99:277,
    100:772,
    101:5,
    102:271,
    103:1153,
    104:48,
    105:167,
    106:1161,
    107:151,
    108:1030,
    109:168,
    110:774,
    111:147,
    112:150,
    113:149,
    114:148,
    115:146,
    116:3,
    117:275,
    118:773,
    119:515,
    120:387,
    121:4,
    122:2,
    123:178,
    124:513,
    125:49,
    126:1,
    127:1162,
    128:285,
    127:1164,
    130:1026,
    131:180,
    132:1285,
    133:514,
    134:1167,
    135:53,
    136:141,
    137:143,
    138:170,
    139:1027,
    140:144,
    141:386,
    142:50,
    143:775,
    144:1028,
    145:642,
    146:646,
    147:644,
    148:139,
    149:782,
    150:776,
    151:279,
    152:4103,
    153:138,
    154:283,
    155:137,
    156:903,
    157:54,
    158:301,
    159:131,
    160:176,
    162:51,
    163:901,
    164:900,
    165:899,
    166:273,
    167:132,
    168:777,
    169:136,
    170:52,
    171:135,
    172:778,
    173:648,
    174:651,
    175:779,
    176:134,
    177:898,
    178:174,
    179:1034,
    180:897,
    181:130,
    182:281,
    183:171,
    184:172,
    185:129,
    186:780,
    187:169,
    188:4353,
    189:1044638,
    190:1044637,
    191:1044636,
    192:4256,
    193:1044874,
    194:1044781,
    195:4107,
    196:1044525,
    197:1044529,
    198:1044523,
    199:1044526,
    200:1044528,
    201:1044527,
    202:4226,
    203:1044640,
    204:4106,
    205:1044510,
    206:1044512,
    207:4254,
    208:1044669,
    209:1044530,
    210:1044531,
    211:4104,
    212:1045637,
    213:1029,
    214:4116,
    215:4120,
    216:1044779,
    217:4866,
    218:4141,
    219:182,
    221:1045638,
    222:1044642,
    223:4613,
    224:5251,
    225:33,
    226:1045122,
    227:4253,
    228:1044635,
    230:1044522,
    231:179,
    232:1044534,
    233:1044641,
    234:184,
    235:4252,
    236:4251,
    237:186,
    238:1045251,
    239:1044533,
    240:5253,
    241:1044493,
    242:5256,
    243:4098,
    244:1045635,
    245:5254,
    246:1044521,
    247:1044668,
    248:4611,
    249:4111,
    250:1045512,
    251:4105,
    252:181,
    253:5252,
    254:5250,
    255:4609,
    256:4257,
    257:1044532,
    258:4100,
    259:4357,
    260:4355,
    261:1044519,
    263:4099,
    264:4385,
    265:4387,
    266:4612,
    267:4112,
    268:5377,
    269:5379,
    270:4363,
    271:4142,
    272:4359,
    273:4867,
    275:4365,
    276:4869,
    277:1044666,
    278:41,
    279:4361,
    280:5249,
    281:4097,
    282:5381,
    283:4489,
    284:4258,
    285:4150,
    286:1044773,
    287:1044775,
    288:1044491,
    289:1044490,
    290:650,
    291:1044771,
    292:4113,
    293:4259,
    294:1044769,
    295:4260,
    296:4139,
    297:4114,
    298:4262,
    299:1044657,
}

address_to_coord = {
# format is:
# (street_id, street_number): (x, y, z),
# For a given Street ID (see the map) and Street Number in section 0,0,
# entering a plot puts you at x,y,z.
# For section sx,sz, multiply sx and sz by 768 and add to x and z.
# Players' plotx,ploty,plotz scores should be set accordingly.
    (  0,  1 ): ( -2561,  53,   727 ),
    (  0,  2 ): ( -2533,  53,   733 ),
    (  0,  3 ): ( -2560,  53,   752 ),
    (  0,  4 ): ( -2531,  53,   756 ),
    (  0,  5 ): ( -2561,  53,   775 ),
    (  0,  6 ): ( -2542,  53,   778 ),
    (  0,  7 ): ( -2558,  53,   797 ),
    (  0,  8 ): ( -2532,  53,   801 ),
    (  0,  9 ): ( -2551,  53,   819 ),
    (  0, 10 ): ( -2528,  53,   825 ),
    (  0, 11 ): ( -2549,  53,   842 ),
    (  0, 13 ): ( -2565,  53,   891 ),
    (  0, 15 ): ( -2550,  53,   913 ),
    (  0, 16 ): ( -2532,  53,   916 ),
    (  0, 17 ): ( -2554,  53,   935 ),
    (  0, 18 ): ( -2533,  53,   938 ),
    (  0, 19 ): ( -2559,  53,   957 ),
    (  0, 20 ): ( -2543,  53,   960 ),
    (  0, 21 ): ( -2557,  53,   980 ),
    (  0, 23 ): ( -2551,  53,  1002 ),
    (  0, 24 ): ( -2528,  57,  1015 ),
    (  0, 25 ): ( -2558,  57,  1033 ),
    (  0, 26 ): ( -2536,  57,  1037 ),
    (  0, 27 ): ( -2559,  57,  1056 ),
    (  0, 28 ): ( -2530,  57,  1060 ),
    (  0, 30 ): ( -2530,  57,  1082 ),
    (  0, 32 ): ( -2534,  57,  1127 ),
    (  0, 33 ): ( -2553,  57,  1150 ),
    (  0, 34 ): ( -2536,  57,  1149 ),
    (  0, 35 ): ( -2556,  57,  1172 ),
    (  0, 36 ): ( -2534,  57,  1173 ),
    (  0, 38 ): ( -2529,  57,  1198 ),
    (  0, 39 ): ( -2554,  53,  1229 ),
    (  0, 40 ): ( -2541,  53,  1243 ),
    (  0, 41 ): ( -2562,  53,  1253 ),
    (  0, 42 ): ( -2544,  53,  1265 ),
    (  0, 43 ): ( -2567,  53,  1275 ),
    (  0, 45 ): ( -2574,  53,  1351 ),
    (  0, 46 ): ( -2544,  53,  1369 ),
    (  0, 47 ): ( -2564,  53,  1374 ),
    (  0, 48 ): ( -2536,  53,  1393 ),
    (  0, 49 ): ( -2558,  53,  1397 ),
    (  0, 50 ): ( -2537,  53,  1416 ),
    (  0, 51 ): ( -2556,  53,  1420 ),
    (  0, 52 ): ( -2539,  53,  1438 ),
    (  0, 53 ): ( -2555,  53,  1443 ),
    (  0, 54 ): ( -2539,  53,  1459 ),
    (  1,  1 ): ( -2668,  65,   716 ),
    (  1,  2 ): ( -2649,  65,   731 ),
    (  1,  3 ): ( -2668,  65,   739 ),
    (  1,  4 ): ( -2647,  65,   753 ),
    (  1,  5 ): ( -2671,  65,   761 ),
    (  1,  6 ): ( -2650,  65,   775 ),
    (  1,  7 ): ( -2676,  65,   796 ),
    (  1,  8 ): ( -2657,  65,   797 ),
    (  1,  9 ): ( -2667,  65,   819 ),
    (  1, 10 ): ( -2649,  65,   819 ),
    (  1, 11 ): ( -2670,  65,   842 ),
    (  1, 13 ): ( -2670,  65,   864 ),
    (  1, 15 ): ( -2672,  65,   889 ),
    (  1, 16 ): ( -2654,  65,   917 ),
    (  1, 18 ): ( -2653,  65,   942 ),
    (  1, 19 ): ( -2669,  65,   962 ),
    (  1, 20 ): ( -2645,  65,   964 ),
    (  1, 21 ): ( -2667,  65,   983 ),
    (  1, 22 ): ( -2641,  65,   987 ),
    (  1, 23 ): ( -2665,  65,  1006 ),
    (  1, 24 ): ( -2638,  65,  1010 ),
    (  1, 25 ): ( -2666,  65,  1037 ),
    (  1, 26 ): ( -2647,  65,  1032 ),
    (  1, 27 ): ( -2664,  65,  1058 ),
    (  1, 28 ): ( -2642,  65,  1055 ),
    (  1, 29 ): ( -2665,  65,  1079 ),
    (  1, 30 ): ( -2643,  65,  1079 ),
    (  1, 32 ): ( -2639,  65,  1118 ),
    (  1, 33 ): ( -2660,  65,  1125 ),
    (  1, 34 ): ( -2639,  65,  1140 ),
    (  1, 35 ): ( -2663,  65,  1150 ),
    (  1, 36 ): ( -2642,  65,  1162 ),
    (  1, 37 ): ( -2662,  65,  1172 ),
    (  1, 38 ): ( -2644,  65,  1185 ),
    (  1, 39 ): ( -2661,  65,  1205 ),
    (  1, 40 ): ( -2641,  65,  1207 ),
    (  1, 41 ): ( -2660,  65,  1228 ),
    (  1, 42 ): ( -2643,  65,  1230 ),
    (  1, 43 ): ( -2667,  65,  1253 ),
    (  1, 44 ): ( -2649,  65,  1254 ),
    (  1, 46 ): ( -2648,  65,  1276 ),
    (  1, 48 ): ( -2649,  65,  1299 ),
    (  1, 49 ): ( -2671,  65,  1319 ),
    (  1, 50 ): ( -2653,  65,  1331 ),
    (  1, 51 ): ( -2672,  65,  1342 ),
    (  1, 52 ): ( -2653,  65,  1353 ),
    (  1, 53 ): ( -2671,  65,  1366 ),
    (  1, 54 ): ( -2645,  65,  1377 ),
    (  1, 56 ): ( -2642,  65,  1402 ),
    (  1, 58 ): ( -2641,  65,  1426 ),
    (  1, 59 ): ( -2662,  65,  1436 ),
    (  1, 60 ): ( -2642,  65,  1450 ),
    (  1, 61 ): ( -2664,  65,  1460 ),
    (  2,  1 ): ( -2832,  78,   776 ),
    (  2,  3 ): ( -2827,  78,   799 ),
    (  2,  5 ): ( -2830,  78,   821 ),
    (  2,  7 ): ( -2828,  78,   843 ),
    (  2,  9 ): ( -2826,  78,   866 ),
    (  2, 11 ): ( -2836,  73,   992 ),
    (  2, 13 ): ( -2838,  73,  1015 ),
    (  2, 15 ): ( -2837,  73,  1038 ),
    (  2, 17 ): ( -2837,  73,  1059 ),
    (  2, 19 ): ( -2838,  73,  1081 ),
    (  2, 21 ): ( -2839,  73,  1103 ),
    (  2, 23 ): ( -2836,  73,  1127 ),
    (  2, 25 ): ( -2837,  73,  1150 ),
    (  2, 27 ): ( -2837,  73,  1172 ),
    (  2, 29 ): ( -2836,  73,  1195 ),
    (  2, 31 ): ( -2836,  73,  1217 ),
    (  2, 33 ): ( -2838,  65,  1251 ),
    (  2, 35 ): ( -2836,  65,  1286 ),
    (  2, 37 ): ( -2842,  78,  1325 ),
    (  2, 39 ): ( -2840,  78,  1348 ),
    (  2, 41 ): ( -2843,  78,  1374 ),
    (  2, 43 ): ( -2843,  78,  1396 ),
    (  2, 45 ): ( -2842,  78,  1418 ),
    (  3,  1 ): ( -2810,  73,  1094 ),
    (  3,  2 ): ( -2806,  73,  1112 ),
    (  3,  3 ): ( -2788,  73,  1095 ),
    (  3,  4 ): ( -2782,  73,  1107 ),
    (  3,  5 ): ( -2766,  73,  1093 ),
    (  3,  6 ): ( -2759,  73,  1109 ),
    (  3,  7 ): ( -2725,  65,  1093 ),
    (  3,  8 ): ( -2723,  65,  1111 ),
    (  3,  9 ): ( -2702,  65,  1094 ),
    (  3, 10 ): ( -2700,  65,  1110 ),
    (  3, 11 ): ( -2587,  57,  1094 ),
    (  3, 12 ): ( -2588,  57,  1113 ),
    (  3, 13 ): ( -2565,  57,  1094 ),
    (  3, 14 ): ( -2566,  57,  1113 ),
    (  4,  1 ): ( -2641,  65,   860 ),
    (  4,  2 ): ( -2647,  65,   880 ),
    (  4,  3 ): ( -2618,  65,   857 ),
    (  4,  4 ): ( -2624,  65,   877 ),
    (  4,  5 ): ( -2586,  53,   861 ),
    (  5,  2 ): ( -2814,  78,  1430 ),
    (  5,  4 ): ( -2792,  78,  1433 ),
    (  5,  6 ): ( -2767,  78,  1430 ),
    (  5,  8 ): ( -2745,  78,  1430 ),
    (  5, 10 ): ( -2722,  78,  1425 ),
    (  5, 11 ): ( -2688,  65,  1409 ),
    (  5, 13 ): ( -2667,  65,  1411 ),
    (  6,  2 ): ( -2812,  65,  1277 ),
    (  6,  3 ): ( -2808,  65,  1261 ),
    (  6,  4 ): ( -2784,  65,  1278 ),
    (  6,  5 ): ( -2780,  65,  1264 ),
    (  6,  6 ): ( -2761,  65,  1279 ),
    (  6,  7 ): ( -2755,  65,  1263 ),
    (  6,  8 ): ( -2738,  65,  1279 ),
    (  6,  9 ): ( -2731,  65,  1259 ),
    (  6, 10 ): ( -2715,  65,  1279 ),
    (  6, 11 ): ( -2705,  65,  1261 ),
    (  6, 12 ): ( -2693,  65,  1281 ),
    (  6, 14 ): ( -2671,  65,  1281 ),
    (  7,  1 ): ( -2807,  73,  1178 ),
    (  7,  2 ): ( -2809,  73,  1192 ),
    (  7,  3 ): ( -2785,  73,  1179 ),
    (  7,  4 ): ( -2781,  73,  1195 ),
    (  7,  5 ): ( -2763,  73,  1174 ),
    (  7,  6 ): ( -2725,  65,  1194 ),
    (  7,  7 ): ( -2723,  65,  1178 ),
    (  7,  8 ): ( -2701,  65,  1195 ),
    (  7,  9 ): ( -2700,  65,  1178 ),
    (  8,  2 ): ( -2810,  73,  1035 ),
    (  8,  3 ): ( -2804,  73,  1014 ),
    (  8,  4 ): ( -2788,  73,  1034 ),
    (  8,  5 ): ( -2776,  73,  1013 ),
    (  8,  6 ): ( -2766,  73,  1032 ),
    (  8,  7 ): ( -2728,  65,  1015 ),
    (  8,  8 ): ( -2730,  65,  1032 ),
    (  8,  9 ): ( -2704,  65,  1014 ),
    (  8, 10 ): ( -2705,  65,  1031 ),
    (  9,  1 ): ( -2865,  65,   922 ),
    (  9,  2 ): ( -2864,  65,   935 ),
    (  9,  3 ): ( -2837,  65,   919 ),
    (  9,  4 ): ( -2839,  65,   934 ),
    (  9,  5 ): ( -2805,  65,   923 ),
    (  9,  6 ): ( -2798,  65,   940 ),
    (  9,  7 ): ( -2783,  65,   923 ),
    (  9,  8 ): ( -2774,  65,   941 ),
    (  9,  9 ): ( -2758,  65,   923 ),
    (  9, 10 ): ( -2750,  65,   944 ),
    (  9, 11 ): ( -2735,  65,   926 ),
    (  9, 12 ): ( -2729,  65,   944 ),
    (  9, 13 ): ( -2712,  65,   928 ),
    (  9, 14 ): ( -2707,  65,   945 ),
    (  9, 15 ): ( -2687,  65,   926 ),
    ( 10,  1 ): ( -2805,  78,   763 ),
    ( 10,  3 ): ( -2782,  78,   765 ),
    ( 10,  5 ): ( -2758,  78,   763 ),
    ( 10,  7 ): ( -2736,  78,   764 ),
}

street_names={
    0:{
        0:"Axtan Avenue",
        1:"Narsen Blvd",
        2:"Cypresswood Drive",
        3:"Swiftwood Lane",
        4:"King's Court",
        5:"Verdant Street",
        6:"Farland Drive",
        7:"Tlaxan Trail",
        8:"Soulvenom Trail",
        9:"Highlands Avenue",
        10:"Plagueroot St",
    },
}

def unpack_r1address(address):
    """
    Convert an R1Address score (integer) into a
    dictionary of address properties.
    """

    street_num = address & 0x7f
    address >>= 7
    street_id = address & 0x1f
    address >>= 5
    tile_z = address & 0xff
    address >>= 8
    tile_x = address & 0xff

    if tile_x > 127:
        tile_x -= 256
    if tile_z > 127:
        tile_z -= 256

    valid = (
        street_num > 0 and
        tile_x in street_names.keys() and
        -1 <= tile_z and
        tile_z <= 1 and
        street_id in street_names[tile_x].keys() and
        (street_id,street_num) in address_to_coord.keys()
    )

    street_name = street_names.get(tile_x,{}).get(street_id,"Unknown Street")

    full_address = "{} {}, Section {},{}".format(
        street_num,
        street_name,
        tile_x,
        tile_z
    )

    return {
        'street_num':   street_num,
        'street_id':    street_id,
        'street_name':  street_name,
        'tile_x':       tile_x,
        'tile_z':       tile_z,
        'full_address': full_address,
        'valid':        valid,
    }

def pack_r1address(tile_x,tile_z,street_id,street_num):
    """
    Convert address properties into
    an R1Address score (integer).
    """

    tile_x &= 0xff
    tile_z &= 0xff
    street_id &= 0x1f
    street_num &= 0x7f

    result = (
        street_num |
        street_id << 7 |
        tile_z << ( 7 + 5 ) |
        tile_x << ( 7 + 5 + 8 )
    )

    return result

def coordinates_from_r1address(address):
    address_details = unpack_r1address(address)

    tile_x = address_details['tile_x']
    tile_z = address_details['tile_z']
    street_id = address_details['street_id']
    street_num = address_details['street_num']

    t0x,t0y,t0z = address_to_coord[ (street_id,street_num) ]

    return (
        tile_x * 768 + t0x,
                      t0y,
        tile_z * 768 + t0z,
    )

