From f2174e8d79370010d82e7a7ffdb48eb6419f72d0 Mon Sep 17 00:00:00 2001
From: Byron Marohn <combustible@live.com>
Date: Tue, 31 Oct 2017 18:02:46 -0700
Subject: [PATCH 07/12] Monumenta - Disable wither spawning

---
 .../net/minecraft/server/BlockWitherSkull.java     | 65 +---------------------
 1 file changed, 1 insertion(+), 64 deletions(-)

diff --git a/src/main/java/net/minecraft/server/BlockWitherSkull.java b/src/main/java/net/minecraft/server/BlockWitherSkull.java
index 7904b126..6ec59182 100644
--- a/src/main/java/net/minecraft/server/BlockWitherSkull.java
+++ b/src/main/java/net/minecraft/server/BlockWitherSkull.java
@@ -28,70 +28,7 @@ public class BlockWitherSkull extends BlockSkull {
     }
 
     public static void a(World world, BlockPosition blockposition, TileEntitySkull tileentityskull) {
-        if (world.captureBlockStates) return; // CraftBukkit
-        Block block = tileentityskull.getBlock().getBlock();
-        boolean flag = block == Blocks.WITHER_SKELETON_SKULL || block == Blocks.WITHER_SKELETON_WALL_SKULL;
-
-        if (flag && blockposition.getY() >= 2 && world.getDifficulty() != EnumDifficulty.PEACEFUL && !world.isClientSide) {
-            ShapeDetector shapedetector = d();
-            ShapeDetector.ShapeDetectorCollection shapedetector_shapedetectorcollection = shapedetector.a(world, blockposition);
-
-            if (shapedetector_shapedetectorcollection != null) {
-                // CraftBukkit start - Use BlockStateListPopulator
-                BlockStateListPopulator blockList = new BlockStateListPopulator(world);
-                int i;
-
-                for (i = 0; i < 3; ++i) {
-                    TileEntitySkull.a(world, shapedetector_shapedetectorcollection.a(i, 0, 0).getPosition());
-                }
-
-                for (i = 0; i < shapedetector.c(); ++i) {
-                    for (int j = 0; j < shapedetector.b(); ++j) {
-                        blockList.setTypeAndData(shapedetector_shapedetectorcollection.a(i, j, 0).getPosition(), Blocks.AIR.getBlockData(), 2); // CraftBukkit
-                    }
-                }
-
-                BlockPosition blockposition1 = shapedetector_shapedetectorcollection.a(1, 0, 0).getPosition();
-                EntityWither entitywither = new EntityWither(world);
-                BlockPosition blockposition2 = shapedetector_shapedetectorcollection.a(1, 2, 0).getPosition();
-
-                entitywither.setPositionRotation((double) blockposition2.getX() + 0.5D, (double) blockposition2.getY() + 0.55D, (double) blockposition2.getZ() + 0.5D, shapedetector_shapedetectorcollection.getFacing().k() == EnumDirection.EnumAxis.X ? 0.0F : 90.0F, 0.0F);
-                entitywither.aQ = shapedetector_shapedetectorcollection.getFacing().k() == EnumDirection.EnumAxis.X ? 0.0F : 90.0F;
-                entitywither.l();
-                // CraftBukkit start
-                if (!world.addEntity(entitywither, SpawnReason.BUILD_WITHER)) {
-                    // Restore drop status from above
-                    for (i = 0; i < 3; ++i) {
-                        TileEntitySkull.setShouldDrop(world, shapedetector_shapedetectorcollection.a(i, 0, 0).getPosition(), true);
-                    }
-                    return;
-                }
-                blockList.updateList();
-                // CraftBukkit end
-                Iterator iterator = world.a(EntityPlayer.class, entitywither.getBoundingBox().g(50.0D)).iterator();
-
-                while (iterator.hasNext()) {
-                    EntityPlayer entityplayer = (EntityPlayer) iterator.next();
-
-                    CriterionTriggers.n.a(entityplayer, (Entity) entitywither);
-                }
-
-                // world.addEntity(entitywither); // CraftBukkit - moved up
-
-                int k;
-
-                for (k = 0; k < 120; ++k) {
-                    world.addParticle(Particles.E, (double) blockposition1.getX() + world.random.nextDouble(), (double) (blockposition1.getY() - 2) + world.random.nextDouble() * 3.9D, (double) blockposition1.getZ() + world.random.nextDouble(), 0.0D, 0.0D, 0.0D);
-                }
-
-                for (k = 0; k < shapedetector.c(); ++k) {
-                    for (int l = 0; l < shapedetector.b(); ++l) {
-                        world.update(shapedetector_shapedetectorcollection.a(k, l, 0).getPosition(), Blocks.AIR);
-                    }
-                }
-
-            }
-        }
+        return;
     }
 
     public static boolean b(World world, BlockPosition blockposition, ItemStack itemstack) {
-- 
2.14.1

