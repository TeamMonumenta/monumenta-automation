#
# NOTE:
# To generate the wiki.db-pass secret, run:
# kubectl create secret -n web generic wiki --from-literal=db-pass="$(openssl rand -base64 32)"

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: wiki
  namespace: web
  annotations:
    nginx.ingress.kubernetes.io/proxy-body-size: "600m"
    nginx.org/client-max-body-size: "600m"
spec:
  ingressClassName: nginx
  tls:
  - hosts:
    - wiki.playmonumenta.com
  rules:
  - host: wiki.playmonumenta.com
    http:
      paths:
        - pathType: Prefix
          path: "/"
          backend:
            service:
              name: wiki
              port:
                number: 80

---

# Service / network ports

apiVersion: v1
kind: Service
metadata:
  name: wiki
  namespace: web
  labels:
    app: wiki
spec:
  type: ClusterIP
  selector:
    app: wiki
  ports:
  - name: "http"
    port: 80
    targetPort: 3000

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: wiki-postgres-hugepages-config
  namespace: web
data:
  postgresql.conf.sample: |
    listen_addresses = '*'
    huge_pages = off

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: wiki-config
  namespace: web
data:
  config.yml: |
    port: 3000
    bindIP: 0.0.0.0
    db:
      type: $(DB_TYPE)
      host: '$(DB_HOST)'
      port: $(DB_PORT)
      user: '$(DB_USER)'
      pass: '$(DB_PASS)'
      db: $(DB_NAME)
      storage: $(DB_FILEPATH)
      ssl: $(DB_SSL)
    ssl:
      enabled: $(SSL_ACTIVE)
      port: 3443
      provider: letsencrypt
      domain: $(LETSENCRYPT_DOMAIN)
      subscriberEmail: $(LETSENCRYPT_EMAIL)
    logLevel: info
    ha: $(HA_ACTIVE)
    uploads:
      # Maximum upload size in bytes per file (default: 5242880 (5 MB))
      maxFileSize: 524288000
      maxImageFileSize: 50000000
      maxOtherFileSize: 524288000
      # Maximum file uploads per request (default: 10)
      maxFiles: 10

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: wiki
  namespace: web
spec:
  selector:
    matchLabels:
      app: wiki
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: wiki
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/hostname
                operator: In
                values:
                - monumenta-17
      containers:
      - name: wiki-js
        image: requarks/wiki:2
        ports:
        - containerPort: 3000
          name: http
        env:
        - name: "DB_TYPE"
          value: "postgres"
        - name: "DB_HOST"
          value: "localhost"
        - name: "DB_PORT"
          value: "5432"
        - name: "DB_USER"
          value: "wiki"
        - name: "DB_PASS"
          valueFrom:
            secretKeyRef:
              name: wiki
              key: db-pass
        - name: "DB_NAME"
          value: "wiki"
        volumeMounts:
        - name: wiki-persistent-storage
          mountPath: /var/lib/postgresql/data
        - name: wiki-config
          mountPath: /wiki/config.yml
          subPath: config.yml
        resources:
          limits:
            cpu: 200m
      - name: wiki-db
        image: postgres:11
        env:
        - name: "POSTGRES_DB"
          value: "wiki"
        - name: "POSTGRES_USER"
          value: "wiki"
        - name: "POSTGRES_PASSWORD"
          valueFrom:
            secretKeyRef:
              name: wiki
              key: db-pass
        volumeMounts:
        - name: wiki-persistent-storage
          mountPath: /var/lib/postgresql/data
        - name: wiki-postgres-hugepages-config
          mountPath: /usr/share/postgresql/postgresql.conf.sample
          subPath: postgresql.conf.sample
        resources:
          limits:
            cpu: 200m
      volumes:
        - name: wiki-persistent-storage
          hostPath:
            type: Directory
            path: /nfs/wiki
        - name: wiki-postgres-hugepages-config
          configMap:
            name: wiki-postgres-hugepages-config
        - name: wiki-config
          configMap:
            name: wiki-config
