# These configmaps are to install the kibana ansi color remover from here: https://github.com/sabre1041/kibana-ansi
# Following this guide: https://cloud.redhat.com/blog/removing-ansi-color-characters-kibana

apiVersion: v1
kind: ConfigMap
metadata:
  name: kibana-ansi
  namespace: kube-system
data:
  ansi.js: |-
    function ANSIProvider(Private) {
        let _ = require('lodash');
        let FieldFormat = Private(require('ui/index_patterns/_field_format/FieldFormat'));

        _.class(ANSI).inherits(FieldFormat);

        function ANSI(params) {
            ANSI.Super.call(this, params);
        }

        ANSI.id = 'ansi';
        ANSI.title = 'ANSI';
        ANSI.fieldType = [
            'string',
        ];

        ANSI.prototype._convert = function(val) {
            return val.replace(/[\u001b\u009b][[()#;?]*(?:[0-9]{1,4}(?:;[0-9]{0,4})*)?[0-9A-ORZcf-nqry=><]/g, '');
        };

        return ANSI;
    }

    require('ui/registry/field_formats').register(ANSIProvider);
  package.json: |-
    {
      "name": "kibana-ansi",
      "version": "1.0.0",
      "description": "Kibana ANSI",
      "main": "index.js"
    }
  index.js: |-
    module.exports = function (kibana) {
      return new kibana.Plugin({

        name: 'kibana-ansi',
        require: ['kibana', 'elasticsearch'],
        uiExports: {
          fieldFormats: ['plugins/kibana-ansi/ansi'],
          visTypes: ['plugins/kibana-ansi/ansi']
        }
      });
    };

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: kibana
  namespace: kube-system
  labels:
    k8s-app: kibana
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: kibana
  template:
    metadata:
      labels:
        k8s-app: kibana
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/hostname
                operator: In
                values:
                - monumenta-12
      containers:
      - name: kibana
        image: docker.elastic.co/kibana/kibana-oss:6.8.4
        env:
          - name: ELASTICSEARCH_URL
            value: http://elasticsearch:9200
        ports:
        - containerPort: 5601
          name: ui
          protocol: TCP
        volumeMounts:
          - name: kibana-ansi-index
            mountPath: /usr/share/kibana/installedPlugins/kibana-ansi/index.js
            subPath: index.js
          - name: kibana-ansi-type
            mountPath: /usr/share/kibana/installedPlugins/kibana-ansi/public/ansi.js
            subPath: ansi.js
          - name: kibana-ansi-package
            mountPath: /usr/share/kibana/installedPlugins/kibana-ansi/package.json
            subPath: package.json
      volumes:
      - name: kibana-ansi-index
        configMap:
          name: kibana-ansi
          items:
            - key: index.js
              path: index.js
          defaultMode: 420
      - name: kibana-ansi-type
        configMap:
          name: kibana-ansi
          items:
            - key: ansi.js
              path: ansi.js
          defaultMode: 420
      - name: kibana-ansi-package
        configMap:
          name: kibana-ansi
          items:
            - key: package.json
              path: package.json
          defaultMode: 420

          # oc patch dc/logging-kibana -p '{"spec":{"template":{"spec":{"volumes":[{"name":"kibana-ansi-type","configMap":{"name":"kibana-ansi","items":[{"key":"ansi.js","path":"ansi.js"}],"defaultMode":420}},{"name":"kibana-ansi-index","configMap":{"name":"kibana-ansi","items":[{"key":"index.js","path":"index.js"}],"defaultMode":420}},{"name":"kibana-ansi-package","configMap":{"name":"kibana-ansi","items":[{"key":"package.json","path":"package.json"}],"defaultMode":420}}],"containers":[{"name":"kibana","volumeMounts":[{"name":"kibana-ansi-index","mountPath":"/usr/share/kibana/installedPlugins/kibana-ansi/index.js","subPath":"index.js"},{"name":"kibana-ansi-type","mountPath":"/usr/share/kibana/installedPlugins/kibana-ansi/public/ansi.js","subPath":"ansi.js"},{"name":"kibana-ansi-package","mountPath":"/usr/share/kibana/installedPlugins/kibana-ansi/package.json","subPath":"package.json"}]}]}}}}'


---

apiVersion: v1
kind: Service
metadata:
  name: kibana
  namespace: kube-system
  labels:
    k8s-app: kibana
    kubernetes.io/name: "Kibana"
spec:
  type: ClusterIP
  ports:
  - port: 5601
    protocol: TCP
    targetPort: ui
  selector:
    k8s-app: kibana


---

# To generate the logs-auth secret, run these commands:
# htpasswd -c ./auth epic
# kubectl create secret generic logs-auth --from-file auth -n kube-system
# rm auth

apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: logs
  namespace: kube-system
  annotations:
    nginx.ingress.kubernetes.io/auth-type: basic
    nginx.ingress.kubernetes.io/auth-secret: logs-auth
    nginx.ingress.kubernetes.io/auth-realm: "Authentication Required - ok"
spec:
  tls:
  - hosts:
    - logs.playmonumenta.com
  rules:
  - host: logs.playmonumenta.com
    http:
      paths:
      - backend:
          serviceName: kibana
          servicePort: 5601
