
# This is a service account for the bot's pod to use to talk to the controller
apiVersion: v1
kind: ServiceAccount
metadata:
  name: dev-service-account
  namespace: default

---

# This is the permission object that will be attached to the above service account
# This specifies what the pod is allowed to do
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  name: dev-role
  namespace: default
rules:
  - apiGroups:
      - ""
      - apps
      - autoscaling
      - batch
      - extensions
      - policy
      - rbac.authorization.k8s.io
    resources:
      - componentstatuses
      - configmaps
      - cronjobs
      - daemonsets
      - deployments
      - deployments/scale
      - events
      - endpoints
      - horizontalpodautoscalers
      - ingress
      - jobs
      - limitranges
      - namespaces
      - nodes
      - pods
      - pods/exec
      - pods/log
      - pods/attach
      - persistentvolumes
      - persistentvolumeclaims
      - resourcequotas
      - replicasets
      - replicationcontrollers
      - serviceaccounts
      - services
      - statefulsets
    verbs: ["*"]
  - nonResourceURLs: ["*"]
    verbs: ["*"]

---

# This binds the role to the service account, giving it perms
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: dev-role-binding
  namespace: default
roleRef:
  kind: ClusterRole
  name: dev-role
  apiGroup: rbac.authorization.k8s.io
subjects:
 - kind: ServiceAccount
   name: dev-service-account
   namespace: default

---

# The nodeport service exposing the SSH port

apiVersion: v1
kind: Service
metadata:
  name: monumenta-dev-environment-nodeport
  namespace: default
  labels:
    app: monumenta-dev-environment
spec:
  type: NodePort
  selector:
    app: monumenta-dev-environment
  ports:
  # SSH
  - name: "22"
    port: 22
    nodePort: 9922
    targetPort: 22

---

# The actual container that runs SSH that you can connect to

apiVersion: apps/v1
kind: Deployment
metadata:
  name: monumenta-dev-environment
  namespace: default
  labels:
    app: monumenta-dev-environment
spec:
  strategy:
    type: Recreate
  replicas: 1
  selector:
    matchLabels:
      app: monumenta-dev-environment
  template:
    metadata:
      labels:
        app: monumenta-dev-environment
    spec:
      serviceAccountName: dev-service-account
      volumes:
        - name: nfs-build-project
          nfs:
            server: 10.6.3.1
            path: /nfs/build/project_epic
        - name: nfs-play-project
          nfs:
            server: 10.6.3.1
            path: /nfs/play/project_epic
        - name: nfs-stage-project
          nfs:
            server: 10.6.3.1
            path: /nfs/stage/project_epic
        - name: nfs-old-backups
          nfs:
            server: 10.6.3.1
            path: /nfs/0_OLD_BACKUPS
        - name: nfs-archive
          nfs:
            server: 10.6.3.1
            path: /nfs/1_ARCHIVE
        - name: nfs-shared
          nfs:
            server: 10.6.3.1
            path: /nfs/4_SHARED
      containers:
      - name: monumenta-dev-environment
        image: monumenta-docker.injic.io/monumenta-dev-environment
        tty: false
        stdin: false
        ports:
        - containerPort: 22
        volumeMounts:
        - name: nfs-build-project
          mountPath: /home/epic/build/project_epic
        - name: nfs-play-project
          mountPath: /home/epic/play/project_epic
        - name: nfs-stage-project
          mountPath: /home/epic/stage/project_epic
        - name: nfs-old-backups
          mountPath: /home/epic/0_OLD_BACKUPS
        - name: nfs-archive
          mountPath: /home/epic/1_ARCHIVE
        - name: nfs-shared
          mountPath: /home/epic/4_SHARED
      imagePullSecrets:
      - name: regcred
